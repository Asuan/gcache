// Code generated by protoc-gen-go. DO NOT EDIT.
// source: item.proto

/*
Package gcache is a generated protocol buffer package.

It is generated from these files:
	item.proto

It has these top-level messages:
	ItemMessage
	ConfigMessage
*/
package gcache

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ItemMessage_Commands int32

const (
	ItemMessage_SET   ItemMessage_Commands = 0
	ItemMessage_GET   ItemMessage_Commands = 1
	ItemMessage_PURGE ItemMessage_Commands = 2
	ItemMessage_DEAD  ItemMessage_Commands = 3
)

var ItemMessage_Commands_name = map[int32]string{
	0: "SET",
	1: "GET",
	2: "PURGE",
	3: "DEAD",
}
var ItemMessage_Commands_value = map[string]int32{
	"SET":   0,
	"GET":   1,
	"PURGE": 2,
	"DEAD":  3,
}

func (x ItemMessage_Commands) String() string {
	return proto.EnumName(ItemMessage_Commands_name, int32(x))
}
func (ItemMessage_Commands) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type ConfigMessage_CacheTypes int32

const (
	ConfigMessage_RWL            ConfigMessage_CacheTypes = 0
	ConfigMessage_LOCKONLY       ConfigMessage_CacheTypes = 1
	ConfigMessage_SINGLEGORUTINE ConfigMessage_CacheTypes = 2
	ConfigMessage_REMOTE         ConfigMessage_CacheTypes = 3
)

var ConfigMessage_CacheTypes_name = map[int32]string{
	0: "RWL",
	1: "LOCKONLY",
	2: "SINGLEGORUTINE",
	3: "REMOTE",
}
var ConfigMessage_CacheTypes_value = map[string]int32{
	"RWL":            0,
	"LOCKONLY":       1,
	"SINGLEGORUTINE": 2,
	"REMOTE":         3,
}

func (x ConfigMessage_CacheTypes) String() string {
	return proto.EnumName(ConfigMessage_CacheTypes_name, int32(x))
}
func (ConfigMessage_CacheTypes) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type ItemMessage struct {
	Command    ItemMessage_Commands `protobuf:"varint,1,opt,name=Command,json=command,enum=gcache.ItemMessage_Commands" json:"Command,omitempty"`
	Name       string               `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	Expiration int64                `protobuf:"varint,3,opt,name=Expiration,json=expiration" json:"Expiration,omitempty"`
	Object     []byte               `protobuf:"bytes,4,opt,name=Object,json=object,proto3" json:"Object,omitempty"`
}

func (m *ItemMessage) Reset()                    { *m = ItemMessage{} }
func (m *ItemMessage) String() string            { return proto.CompactTextString(m) }
func (*ItemMessage) ProtoMessage()               {}
func (*ItemMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ItemMessage) GetCommand() ItemMessage_Commands {
	if m != nil {
		return m.Command
	}
	return ItemMessage_SET
}

func (m *ItemMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ItemMessage) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *ItemMessage) GetObject() []byte {
	if m != nil {
		return m.Object
	}
	return nil
}

type ConfigMessage struct {
	DefaultExpiration int64                    `protobuf:"varint,1,opt,name=DefaultExpiration,json=defaultExpiration" json:"DefaultExpiration,omitempty"`
	SizeLimit         int64                    `protobuf:"zigzag64,2,opt,name=SizeLimit,json=sizeLimit" json:"SizeLimit,omitempty"`
	ShardCount        int64                    `protobuf:"zigzag64,3,opt,name=ShardCount,json=shardCount" json:"ShardCount,omitempty"`
	IsKeepUsefull     bool                     `protobuf:"varint,4,opt,name=IsKeepUsefull,json=isKeepUsefull" json:"IsKeepUsefull,omitempty"`
	CacheType         ConfigMessage_CacheTypes `protobuf:"varint,5,opt,name=CacheType,json=cacheType,enum=gcache.ConfigMessage_CacheTypes" json:"CacheType,omitempty"`
}

func (m *ConfigMessage) Reset()                    { *m = ConfigMessage{} }
func (m *ConfigMessage) String() string            { return proto.CompactTextString(m) }
func (*ConfigMessage) ProtoMessage()               {}
func (*ConfigMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConfigMessage) GetDefaultExpiration() int64 {
	if m != nil {
		return m.DefaultExpiration
	}
	return 0
}

func (m *ConfigMessage) GetSizeLimit() int64 {
	if m != nil {
		return m.SizeLimit
	}
	return 0
}

func (m *ConfigMessage) GetShardCount() int64 {
	if m != nil {
		return m.ShardCount
	}
	return 0
}

func (m *ConfigMessage) GetIsKeepUsefull() bool {
	if m != nil {
		return m.IsKeepUsefull
	}
	return false
}

func (m *ConfigMessage) GetCacheType() ConfigMessage_CacheTypes {
	if m != nil {
		return m.CacheType
	}
	return ConfigMessage_RWL
}

func init() {
	proto.RegisterType((*ItemMessage)(nil), "gcache.ItemMessage")
	proto.RegisterType((*ConfigMessage)(nil), "gcache.ConfigMessage")
	proto.RegisterEnum("gcache.ItemMessage_Commands", ItemMessage_Commands_name, ItemMessage_Commands_value)
	proto.RegisterEnum("gcache.ConfigMessage_CacheTypes", ConfigMessage_CacheTypes_name, ConfigMessage_CacheTypes_value)
}

func init() { proto.RegisterFile("item.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x91, 0xdf, 0x8a, 0x9b, 0x40,
	0x18, 0xc5, 0x77, 0xa2, 0x6b, 0xf4, 0xeb, 0x66, 0x71, 0xbf, 0x8b, 0xe2, 0xc5, 0x52, 0x44, 0x7a,
	0xe1, 0x45, 0x11, 0xda, 0x42, 0x2f, 0x0b, 0xc5, 0x0c, 0x22, 0xeb, 0x6a, 0x19, 0x0d, 0xa5, 0x97,
	0xb3, 0x66, 0x92, 0x4c, 0x89, 0x7f, 0xc8, 0x4c, 0xa0, 0xed, 0x03, 0xf5, 0x49, 0xfa, 0x60, 0x45,
	0x53, 0xd3, 0x74, 0xef, 0x8e, 0xe7, 0x3b, 0xe0, 0x39, 0xbf, 0x01, 0x90, 0x5a, 0x34, 0x51, 0x7f,
	0xe8, 0x74, 0x87, 0xd6, 0xb6, 0xe6, 0xf5, 0x4e, 0x04, 0xbf, 0x09, 0xbc, 0x48, 0xb5, 0x68, 0x1e,
	0x85, 0x52, 0x7c, 0x2b, 0xf0, 0x03, 0xcc, 0xe3, 0xae, 0x69, 0x78, 0xbb, 0xf6, 0x88, 0x4f, 0xc2,
	0xdb, 0x77, 0xf7, 0xd1, 0x29, 0x19, 0x5d, 0xa4, 0xa2, 0xbf, 0x11, 0xc5, 0xe6, 0xf5, 0x49, 0x21,
	0x82, 0x99, 0xf3, 0x46, 0x78, 0x33, 0x9f, 0x84, 0x0e, 0x33, 0x5b, 0xde, 0x08, 0x7c, 0x05, 0x40,
	0xbf, 0xf7, 0xf2, 0xc0, 0xb5, 0xec, 0x5a, 0xcf, 0xf0, 0x49, 0x68, 0x30, 0x10, 0x67, 0x07, 0x5f,
	0x82, 0x55, 0x3c, 0x7d, 0x13, 0xb5, 0xf6, 0x4c, 0x9f, 0x84, 0x37, 0xcc, 0xea, 0xc6, 0xaf, 0xe0,
	0x2d, 0xd8, 0xd3, 0x0f, 0x70, 0x0e, 0x46, 0x49, 0x2b, 0xf7, 0x6a, 0x10, 0x09, 0xad, 0x5c, 0x82,
	0x0e, 0x5c, 0x7f, 0x5e, 0xb1, 0x84, 0xba, 0x33, 0xb4, 0xc1, 0x5c, 0xd2, 0x4f, 0x4b, 0xd7, 0x08,
	0x7e, 0xcd, 0x60, 0x11, 0x77, 0xed, 0x46, 0x6e, 0xa7, 0x21, 0x6f, 0xe0, 0x6e, 0x29, 0x36, 0xfc,
	0xb8, 0xd7, 0x17, 0x1d, 0xc8, 0xd8, 0xe1, 0x6e, 0xfd, 0xfc, 0x80, 0xf7, 0xe0, 0x94, 0xf2, 0xa7,
	0xc8, 0x64, 0x23, 0xf5, 0xb8, 0x01, 0x99, 0xa3, 0x26, 0x63, 0x18, 0x52, 0xee, 0xf8, 0x61, 0x1d,
	0x77, 0xc7, 0x56, 0x8f, 0x43, 0x90, 0x81, 0x3a, 0x3b, 0xf8, 0x1a, 0x16, 0xa9, 0x7a, 0x10, 0xa2,
	0x5f, 0x29, 0xb1, 0x39, 0xee, 0xf7, 0xe3, 0x1e, 0x9b, 0x2d, 0xe4, 0xa5, 0x89, 0x1f, 0xc1, 0x89,
	0x07, 0x92, 0xd5, 0x8f, 0x5e, 0x78, 0xd7, 0x23, 0x5c, 0x7f, 0x82, 0xfb, 0x5f, 0xf7, 0xe8, 0x1c,
	0x53, 0xcc, 0xa9, 0x27, 0x1d, 0xc4, 0x00, 0xff, 0x0e, 0x03, 0x0f, 0xf6, 0x25, 0x73, 0xaf, 0xf0,
	0x06, 0xec, 0xac, 0x88, 0x1f, 0x8a, 0x3c, 0xfb, 0xea, 0x12, 0x44, 0xb8, 0x2d, 0xd3, 0x3c, 0xc9,
	0x68, 0x52, 0xb0, 0x55, 0x95, 0xe6, 0x03, 0x26, 0x00, 0x8b, 0xd1, 0xc7, 0xa2, 0xa2, 0xae, 0xf1,
	0x64, 0x8d, 0xcf, 0xff, 0xfe, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xad, 0xdc, 0xb5, 0x0c,
	0x02, 0x00, 0x00,
}
